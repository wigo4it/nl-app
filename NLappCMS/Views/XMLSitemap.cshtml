@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    Layout = null;
    Response.AddHeader("Content-Type", "text/xml");
    const string DATE_TIME_FORMAT = "yyyy-MM-ddTHH:mm:sszzz";

    IPublishedContent rootPage = Model.Content.Site();
    var cultures = ApplicationContext.Current.Services.LocalizationService.GetAllLanguages();
    var requestUrl = Request.Url.GetLeftPart(UriPartial.Authority);
}

<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
        xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
    <url>
        <loc>@FormatUrl(rootPage.UrlWithDomain(), requestUrl, string.Empty)</loc>
        <priority>1.0</priority>
        <lastmod>@rootPage.UpdateDate.ToString(DATE_TIME_FORMAT)</lastmod>
    </url>

    @foreach (var culture in cultures)
    {
        @RenderChildPages(rootPage.Children, DATE_TIME_FORMAT, culture.IsoCode, requestUrl)
    }
</urlset>

@helper RenderChildPages(IEnumerable<IPublishedContent> pages, string dateTimeFormat, string culture, string requestUrl)
{
    foreach (IPublishedContent item in pages.Where(x => x.IsVisible()
             && !x.DocumentTypeAlias.ToUpper().Equals("SEARCH")))
    {

        if (!(item.HasValue("excludeFromSitemap") && (bool)item.GetPropertyValue("excludeFromSitemap"))
            && !((item.UrlWithDomain().Contains("gedeelde-content")) || item.UrlWithDomain().Contains(("html-404"))))
        {
            <url>
                <loc>@FormatUrl(item.UrlWithDomain(), requestUrl, culture)</loc>
                <lastmod>@item.UpdateDate.ToString(dateTimeFormat)</lastmod>
            </url>

            if (item.Children.Any(x => x.IsVisible()))
            {
                @RenderChildPages(item.Children, dateTimeFormat, culture, requestUrl)
            }
        }
    }
}

@helper FormatUrl(string url, string requestUrl, string culture)
{
    var uri = new Uri(url);
    var uriPathParts = uri.PathAndQuery.Split('/');

    url = requestUrl;

    if (uriPathParts.Length > 1 && !string.IsNullOrEmpty(culture))
    {
        uriPathParts[1] = culture;
        url = requestUrl + string.Join("/", uriPathParts);
    }

    @url
}
