@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization
@using NLappCMS.Models;
@{
    Layout = null;
    Response.AddHeader("Content-Type", "application/json");

    Func<object> getManifest = () =>
    {
        var manifest = new PwaManifest
        {
            BackgroundColor = "#ffffff",
            Display = "standalone",
            Name = "NL App",
            Orientation = "portrait",
            ShortName = "NLApp",
            StartUrl = ".",
            ThemeColor = "#1565C0"
        };

        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-72x72.png",     "72x72", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-96x96.png",     "96x96", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-128x128.png", "128x128", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-144x144.png", "144x144", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-152x152.png", "152x152", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-192x192.png", "192x192", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-384x384.png", "384x384", "image/png"));
        manifest.Icons.Add(new PwaManifestIcon("../../icons/icon-512x512.png", "512x512", "image/png"));

        return manifest;
    };
}
@Html.Raw(JsonConvert.SerializeObject(getManifest(), Formatting.None, new JsonSerializerSettings()
{
    ContractResolver = new DefaultContractResolver { NamingStrategy = new SnakeCaseNamingStrategy() }
}))
